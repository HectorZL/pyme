# Generated by Django 5.2.4 on 2025-07-25 23:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('anime', '0002_alter_useranimelist_status'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RenameField(
            model_name='anime',
            old_name='episodes',
            new_name='episode_count',
        ),
        migrations.AddField(
            model_name='useranimelist',
            name='finish_date',
            field=models.DateField(blank=True, null=True, verbose_name='Fecha de finalización'),
        ),
        migrations.AddField(
            model_name='useranimelist',
            name='rewatch_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Veces visto'),
        ),
        migrations.AddField(
            model_name='useranimelist',
            name='start_date',
            field=models.DateField(blank=True, null=True, verbose_name='Fecha de inicio'),
        ),
        migrations.AlterField(
            model_name='useranimelist',
            name='score',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Puntuación (0-10)'),
        ),
        migrations.AlterField(
            model_name='useranimelist',
            name='status',
            field=models.CharField(choices=[('por_ver', 'Por ver'), ('viendo', 'Viendo'), ('finalizado', 'Finalizado'), ('en_pausa', 'En pausa'), ('abandonado', 'Abandonado')], default='por_ver', max_length=15, verbose_name='Estado'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Contenido')),
                ('is_spoiler', models.BooleanField(default=False, verbose_name='Contiene spoilers')),
                ('is_edited', models.BooleanField(default=False, verbose_name='Editado')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última actualización')),
                ('anime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='anime.anime')),
                ('dislikes', models.ManyToManyField(blank=True, related_name='disliked_comments', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_comments', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='anime.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anime_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comentario',
                'verbose_name_plural': 'Comentarios',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(verbose_name='Número de episodio')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('duration', models.PositiveIntegerField(default=24, verbose_name='Duración (minutos)')),
                ('air_date', models.DateField(blank=True, null=True, verbose_name='Fecha de emisión')),
                ('video_url', models.URLField(blank=True, null=True, verbose_name='URL del vídeo')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='episode_thumbnails/', verbose_name='Miniatura')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última actualización')),
                ('anime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episode_list', to='anime.anime')),
            ],
            options={
                'verbose_name': 'Episodio',
                'verbose_name_plural': 'Episodios',
                'ordering': ['number'],
                'unique_together': {('anime', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('comment', 'Nuevo comentario'), ('reply', 'Respuesta a tu comentario'), ('like', 'Me gusta en tu comentario'), ('follow', 'Nuevo seguidor'), ('system', 'Notificación del sistema'), ('anime_update', 'Actualización de anime')], max_length=20, verbose_name='Tipo')),
                ('message', models.TextField(verbose_name='Mensaje')),
                ('is_read', models.BooleanField(default=False, verbose_name='Leído')),
                ('related_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='ID relacionado')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notificación',
                'verbose_name_plural': 'Notificaciones',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Biografía')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Avatar')),
                ('banner', models.ImageField(blank=True, null=True, upload_to='banners/', verbose_name='Banner')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Fecha de nacimiento')),
                ('location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ubicación')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Sitio web')),
                ('social_media', models.JSONField(blank=True, default=dict, verbose_name='Redes sociales')),
                ('email_verified', models.BooleanField(default=False, verbose_name='Correo verificado')),
                ('preferences', models.JSONField(blank=True, default=dict, verbose_name='Preferencias')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WatchHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('watched_at', models.DateTimeField(auto_now_add=True, verbose_name='Visto el')),
                ('progress', models.PositiveIntegerField(default=0, verbose_name='Progreso (segundos)')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Completado')),
                ('anime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watch_history', to='anime.anime')),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watch_history', to='anime.episode')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watch_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Historial de visualización',
                'verbose_name_plural': 'Historial de visualizaciones',
                'ordering': ['-watched_at'],
                'unique_together': {('user', 'episode')},
            },
        ),
    ]
